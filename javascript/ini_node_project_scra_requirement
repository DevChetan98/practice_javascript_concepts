✅ Project Structure:

bash
Copy
Edit
/node-project
│
├── /src
│   ├── /config
│   │   └── db.js
│   ├── /models
│   │   └── User.js
│   ├── /routes
│   │   └── userRoutes.js
│   ├── /controllers
│   │   └── userController.js
│   ├── /middleware
│   │   └── authMiddleware.js
│   ├── app.js
│
├── .env
├── .gitignore
├── package.json
├── package-lock.json
├── server.js
✅ Basic Node.js Setup:
1️⃣ Initialize Project:

bash
Copy
Edit
mkdir node-project
cd node-project
npm init -y
2️⃣ Install Dependencies:

bash
Copy
Edit
npm install express dotenv sequelize mysql2 cors body-parser
npm install --save-dev nodemon
3️⃣ Scripts in package.json:

json
Copy
Edit
"scripts": {
  "start": "node server.js",
  "dev": "nodemon server.js"
}
4️⃣ Database Configuration (Sequelize)
👉 /src/config/db.js

javascript
Copy
Edit
const { Sequelize } = require('sequelize');

const sequelize = new Sequelize(process.env.DB_NAME, process.env.DB_USER, process.env.DB_PASS, {
  host: process.env.DB_HOST,
  dialect: 'mysql'
});

sequelize.authenticate()
  .then(() => console.log('Database connected...'))
  .catch(err => console.error('Unable to connect to the database:', err));

module.exports = sequelize;
5️⃣ Server Setup:
👉 server.js

javascript
Copy
Edit
require('dotenv').config();
const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const userRoutes = require('./src/routes/userRoutes');
const sequelize = require('./src/config/db');

const app = express();

// Middleware
app.use(cors());
app.use(bodyParser.json());

// Routes
app.use('/api/users', userRoutes);

// Sync Database
sequelize.sync();

// Start Server
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
6️⃣ Environment Variables:
👉 .env

ini
Copy
Edit
DB_NAME=yourdbname
DB_USER=root
DB_PASS=password
DB_HOST=localhost
PORT=5000
7️⃣ User Model (Sequelize):
👉 /src/models/User.js

javascript
Copy
Edit
const { DataTypes } = require('sequelize');
const sequelize = require('../config/db');

const User = sequelize.define('User', {
  name: {
    type: DataTypes.STRING,
    allowNull: false,
  },
  email: {
    type: DataTypes.STRING,
    allowNull: false,
    unique: true,
  },
  password: {
    type: DataTypes.STRING,
    allowNull: false,
  }
});

module.exports = User;
8️⃣ Controller and Routes:
👉 /src/controllers/userController.js

javascript
Copy
Edit
const User = require('../models/User');

exports.getUsers = async (req, res) => {
  try {
    const users = await User.findAll();
    res.status(200).json(users);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};
👉 /src/routes/userRoutes.js

javascript
Copy
Edit
const express = require('express');
const { getUsers } = require('../controllers/userController');

const router = express.Router();

router.get('/', getUsers);

module.exports = router;
✅ Final Steps:

bash
Copy
Edit
npm run dev
✨ And boom! You now have a clean and scalable Node.js project with Express, Sequelize, and MySQL.

Would you like to add authentication, validation, or error handling next? Let me know! 🚀